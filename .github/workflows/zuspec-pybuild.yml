
name: zuspec_pybuild
on:
  workflow_call:
    inputs:
        version_dir:
            required: true
            type: string
        build_linux:
            type: boolean
            default: true
        build_macos:
            type: boolean
            default: false
        build_windows:
            type: boolean
            default: false
        build_docs:
            type: boolean
            default: false
    secrets:
      PYPI_API_TOKEN:
        required: true

jobs:
    linux:
        runs-on: ubuntu-latest
        strategy:
          matrix:
            spec: ['cp38-cp38', 'cp39-cp39', 'cp310-cp310', 'cp311-cp311', 'cp312-cp312']
            image: [manylinux2014_x86_64, manylinux_2_28_x86_64, manylinux_2_34_x86_64]
        steps:
        - name: checkout
          uses: actions/checkout@v4
        - name: Update Version
          shell: bash
          run: |
            tag=$(git tag -l --contains HEAD)
            echo "tag: ${tag}"

            if test -z ${tag}; then
                # Candidate release
                echo "Configuring a candidate release"
                sed -i -e 's/SUFFIX=".*"/SUFFIX=".${{ github.run_id }}rc0"/g' \
                  ${{ inputs.version_dir }}/__version__.py 
            else
                echo "Configuring a full release"
            fi
        
        - name: Build packages
          env:
            IVPM_PYTHON: /opt/python/${{ matrix.spec }}/bin/python
            BUILD_NUM: ${{ github.run_id }}
          run: >
            docker run --rm
            --volume "$(pwd):/io"
            --env IVPM_PYTHON
            --env BUILD_NUM
            --workdir /io
            quay.io/pypa/${{ matrix.image }}
            /io/scripts/build_linux.sh
        - name: Publish to PyPi
          if: ${{ startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v') }}
          env:
            BUILD_NUM: ${{ github.run_id }}
            TWINE_USERNAME: __token__
            TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          run: |
            python3 -m pip install -U twine packaging
            python3 -m twine upload wheelhouse/*.whl


